"0","#fitting the random forest"
"0","fit_rf0 <- randomForest(UNITS ~ .-STORE_NUM-BASE_PRICE-WEEK_END_DATE, data = dta, subset = train_points,importance=TRUE)"
"0","print(fit_rf0)"
"1","
Call:
"
"1"," "
"1","randomForest(formula = UNITS ~ . - STORE_NUM - BASE_PRICE - WEEK_END_DATE, "
"1"," "
"1","    data = dta, importance = TRUE, subset = train_points)"
"1"," "
"1","
"
"1","               Type of random forest: "
"1",""
"1","regression"
"1",""
"1","
"
"1","                     Number of trees: "
"1",""
"1","500"
"1",""
"1","
"
"1","No. of variables tried at each split: "
"1",""
"1","3"
"1",""
"1","

"
"1","          Mean of squared residuals: "
"1",""
"1","57.81435"
"1",""
"1","
"
"1","                    % Var explained: "
"1",""
"1","68.8"
"1",""
"1","
"
"0","rf_pred <- predict(fit_rf0, newdata = dta[-train_points,])"
"0","cat(""Mean absolute error:"", mean(abs(rf_pred - dta$UNITS[-train_points])), ""\n"")"
"1","Mean absolute error:"
"1"," "
"1","4.767506"
"1"," "
"1","
"
"0","#Saving performace"
"0","MSE[1]<-mean(abs(rf_pred - dta$UNITS[-train_points]))"
"0","RMSE[1]<-(mean((rf_pred - dta$UNITS[-train_points])^2))^(1/2)"
"0","Row_name[1]<-""fit_rf0"""
"0",""
"0","#Analisis"
"0","fit_imp <- importance(fit_rf0, type = 1)#generate importance table "
"0","as.data.frame(fit_imp[order(fit_imp,decreasing =TRUE),])"
